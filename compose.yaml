services:
  db:
    image: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - fatec-network

  rabbitmq:
    image: rabbitmq:management
    restart: always
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - fatec-network

  minio:
    image: quay.io/minio/minio
    restart: always
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    networks:
      - fatec-network

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
      - minio
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_QUEUE_NAME=${RABBITMQ_QUEUE_NAME}
      - RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
      - RABBITMQ_ROUTING_KEY=${RABBITMQ_ROUTING_KEY}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - HIBERNATE_DDL_AUTO=${HIBERNATE_DDL_AUTO}
      - HIBERNATE_SHOW_SQL=${HIBERNATE_SHOW_SQL}
      - HIBERNATE_FORMAT_SQL=${HIBERNATE_FORMAT_SQL}
    ports:
      - 8080:8080
    networks:
      - fatec-network

  frontend:
    build:
      context: ./fatec-front
      dockerfile: Dockerfile
    depends_on:
      - backend
    volumes:
      - frontend-data:/var/lib/frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - 3000:3000
    networks:
      - fatec-network

volumes:
  db-data:
  rabbitmq-data:
  minio-data:
  frontend-data:

networks:
  fatec-network: